/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package GUI;

import BLL.KhoaThi_BLL;
import BLL.PhongThi_BLL;
import DTO.KhoaThi_DTO;
import DTO.PhongThi_DTO;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

public class PhongThi extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    KhoaThi_BLL kb = new KhoaThi_BLL();
    PhongThi_BLL pb = new PhongThi_BLL();
    
    public PhongThi() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setComboKhoaThi();
        setTitle("Quản lý phòng thi");
        model = (DefaultTableModel) tbDSPhongThi.getModel();
        txtSoLuongPhong.setDocument(new LengthRestrictedDocument(2));
        txtSoLuongPhong.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {                
                if (String.valueOf(evt.getKeyChar()).matches("[^0-9]")) {
                    evt.consume();
                }
            }
        });
    }

    public final class LengthRestrictedDocument extends PlainDocument {
        
        private final int limit;
        
        public LengthRestrictedDocument(int limit) {
            this.limit = limit;
        }
        
        @Override
        public void insertString(int offs, String str, AttributeSet a)
                throws BadLocationException {
            if (str == null) {
                return;
            }
            
            if ((getLength() + str.length()) <= limit) {
                super.insertString(offs, str, a);
            }
        }
    }

    public void setComboKhoaThi() {
        
        try {
            ArrayList<KhoaThi_DTO> list = kb.getAll();
            for (KhoaThi_DTO k : list) {
                cbKhoaThi.addItem(k.getIDKhoaThi() + ":" + k.getTenKhoaThi());
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(PhongThi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbKhoaThi = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDSPhongThi = new javax.swing.JTable();
        cbTrinhDoThem = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtSoLuongPhong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbKhoaThi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn khóa thi--" }));
        cbKhoaThi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKhoaThiItemStateChanged(evt);
            }
        });

        tbDSPhongThi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phòng", "Tên phòng", "Trình độ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDSPhongThi.setRowHeight(30);
        tbDSPhongThi.setShowGrid(true);
        tbDSPhongThi.setShowVerticalLines(false);
        tbDSPhongThi.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbDSPhongThi);

        cbTrinhDoThem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn trình độ--", "A2", "B1" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("THÊM PHÒNG THI");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setForeground(new java.awt.Color(255, 51, 51));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Nhập số lượng phòng");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 204));
        jLabel7.setText("QUẢN LÝ PHÒNG THI");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons8-back-96 (1).png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtSoLuongPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbTrinhDoThem, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbKhoaThi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel5))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel7)))
                .addGap(22, 22, 22)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbKhoaThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTrinhDoThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtSoLuongPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThem)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        new Home().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel8MousePressed

    private void cbKhoaThiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKhoaThiItemStateChanged
        if (!cbKhoaThi.getSelectedItem().equals("--Chọn khóa thi--")) {
            int id = Integer.parseInt(String.valueOf(cbKhoaThi.getSelectedItem()).split(":")[0]);
            setTblPhongThi(id);
        } else {
            model.setRowCount(0);
        }
        
    }//GEN-LAST:event_cbKhoaThiItemStateChanged
    
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (cbKhoaThi.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn khóa thi trước !");
        } else if (cbTrinhDoThem.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn trình độ !");
        } else if (txtSoLuongPhong.getText().isBlank() || txtSoLuongPhong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập số lượng phòng muốn thêm !");
        } else if (Integer.parseInt(txtSoLuongPhong.getText()) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập số lượng phòng hợp lệ !");
        } else {
            int idkt = Integer.parseInt(String.valueOf(cbKhoaThi.getSelectedItem()).split(":")[0]);
            ArrayList<PhongThi_DTO> list = pb.getDSPhongThi(idkt);
            HashMap check = new HashMap();
            for (PhongThi_DTO pt : list) {
                check.put(pt.getTenPhongThi().substring(4), null);
            }
            int soluongphong = Integer.parseInt(txtSoLuongPhong.getText());
            int sl = soluongphong;
            String trinhdo = (String) cbTrinhDoThem.getSelectedItem();
            String query = "insert into phongthi(tenphongthi,idkhoathi,trinhdo)\n"
                    + "values";
            
            int i = 1;
            while (soluongphong > 0) {
                if (!check.containsKey(String.valueOf(i))) {
                    query += "('" + trinhdo + "_P" + i + "'," + idkt + ",'" + trinhdo + "')," + "\n";
                    soluongphong--;
                }
                i++;
            }
            query = query.substring(0, query.length() - 2);
            //System.out.println(query);
            pb.addPhongThi(query);
            JOptionPane.showMessageDialog(rootPane, "Đã tạo " + sl + " phòng thi cho trình độ " + trinhdo);
            txtSoLuongPhong.setText("");
            setTblPhongThi(idkt);
        }
        

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int i =tbDSPhongThi.getSelectedRow();
        if(i<0){
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn phòng cần xóa !");
        }else{
            int idp = (int)tbDSPhongThi.getValueAt(i,0);
            int conf = JOptionPane.showConfirmDialog(rootPane, "Đồng ý xóa ? ", "Xóa phòng thi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (conf == JOptionPane.YES_OPTION) {
                pb.delete(idp);
                pb.xoakhoiKQT(idp);
                pb.xoakhoiSBD(idp);
                pb.xoakhoiDSPT(idp);
                setTblPhongThi(Integer.parseInt(String.valueOf(cbKhoaThi.getSelectedItem()).split(":")[0]));
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed
    public void setTblPhongThi(int idkt) {
        model.setRowCount(0);
        ArrayList<PhongThi_DTO> list = pb.getDSPhongThi(idkt);
        for (PhongThi_DTO pt : list) {
            model.addRow(new Object[]{pt.getIDPhongThi(), pt.getTenPhongThi(), pt.getTrinhDo()});
        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PhongThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PhongThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PhongThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PhongThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PhongThi().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbKhoaThi;
    private javax.swing.JComboBox<String> cbTrinhDoThem;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDSPhongThi;
    private javax.swing.JTextField txtSoLuongPhong;
    // End of variables declaration//GEN-END:variables
}
